/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dd;

import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class TEST extends javax.swing.JFrame {

    /**
     * Creates new form TEST
     */
    Statement stm;
    PreparedStatement pst;
    Connectage con = new Connectage();
    ResultSet rs;
    

    
//    CREATION D'UN TABLEAU NOMMEE MODEL
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel Ptotal = new DefaultTableModel();
    public TEST() throws SQLException {
        initComponents();
        //Creation des colonnes dans le tableau Model
        model.addColumn("ID");
        model.addColumn("Prenom");
        model.addColumn("Nom");
        model.addColumn("Salaire");
        model.addColumn("Taux Horaire");
        model.addColumn("Heure de Travail");
        model.addColumn("Type");
        model.addColumn("Paiement");
        
          
        try{
            
            // connection a la base de donnees avec notre fonction laconnexion()
            stm = con.laconnexion().createStatement();
            //Execution du requete sql avec executeQuery
            ResultSet rs = stm.executeQuery("Select * from employe");
            //Parcourir le tableau avec le boucle while
            
            while(rs.next()){
       
            
                //calcul du paiement des employes
                double salaire = (rs.getDouble("taux_horaire")*40)/100;
                double paiementNormal = salaire*rs.getInt("nbr_heures_travail");
                double prime= salaire*((1.5));
                double paiements = paiementNormal + prime;
               
//                  
                //ajouter les lignes du tableau avec la addRow
                model.addRow(new Object[]{rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),salaire,rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements });
            }
            //en cas d'echec
        }catch(Exception e){
            System.err.println(e);
        }
        
        //le tableau montab est le tableau initiale qui sera charger par le noouveau tableau model
        montab.setModel(model);
        
        //Creation des colonnes dans le tableau payment 
        Ptotal.addColumn("Payment");
 
        try{
            
            // connection a la base de donnees avec notre fonction laconnexion()
            stm = con.laconnexion().createStatement();
            //Execution du requete sql avec executeQuery
            ResultSet rs = stm.executeQuery("Select * from employe");
            
            //Parcourir le tableau avec le boucle while
            
            while(rs.next()){
       
            
                //calcul du paiement des employes
                double salaire = (rs.getDouble("taux_horaire")*40)/100;
                double paiementNormal = salaire*rs.getInt("nbr_heures_travail");
                double prime= salaire*((1.5));
                double paiements = paiementNormal + prime;
                Object[] payTotal = {paiements };
                    Ptotal.addRow(payTotal);
                    
                int montantTotal = 0;
                for(int i = 0; i < payTotal.length; i++)
                {
                    montantTotal +=  (int) payTotal[i];
                }
                
                //ajouter les lignes du tableau avec la addRow
                
            }
            //en cas d'echec
        }catch(Exception e){
            System.err.println(e);
        }
//        paymentTotal.setModel(Ptotal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nText = new javax.swing.JTextField();
        thText = new javax.swing.JTextField();
        pText = new javax.swing.JTextField();
        sText = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        montab = new javax.swing.JTable();
        tText = new javax.swing.JComboBox<>();
        idText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        deconnect = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        addheureComText = new javax.swing.JTextField();
        addHeureGolfText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ajouteHeureCom = new javax.swing.JButton();
        btnajouterHeureGolfe = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        htText = new javax.swing.JTextField();
        htText2 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuAdd = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenuItem();
        menuUpdate = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuSearch = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem2.setText("jMenuItem2");

        jMenu5.setText("File");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar3.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DAKARDISTRIBUTION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Ajouter un Employ√©");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 11, -1, -1));

        jLabel3.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 89, -1, -1));

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(2, 341));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 117, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Listes des Employ√©s");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 11, -1, -1));
        jPanel2.add(nText, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 148, 135, 34));
        jPanel2.add(thText, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 244, 135, 34));
        jPanel2.add(pText, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 148, 153, 34));

        sText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sTextKeyPressed(evt);
            }
        });
        jPanel2.add(sText, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 153, 34));

        btnEdit.setText("Modifier");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel2.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 413, 96, 35));

        btnAdd.setText("Ajouter");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 413, 96, 35));

        btnDelete.setText("Supprimer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(282, 413, 96, 35));

        btnUpdate.setText("Actualiser");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 158, 35));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Prenom");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 125, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nom");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 125, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Heure de Travail");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 216, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Taux Horaire");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 216, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Salaire");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 311, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Type");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 311, -1, -1));

        montab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        montab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                montabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(montab);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 570, 210));

        tText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Ingenieur" }));
        tText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTextActionPerformed(evt);
            }
        });
        jPanel2.add(tText, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 339, 135, 34));
        jPanel2.add(idText, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 69, 323, 38));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("ID");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 46, -1, -1));

        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });
        jPanel2.add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, 160, 40));

        btnSearch.setText("Rechercher par type");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, 160, 35));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("NB :");

        jLabel13.setText("Pour modifier ou supprimer un employ√© , il faut cliquer");

        jLabel15.setText("sur une ligne du tableau et soumettre l'action.");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 462, -1, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, -18, 50, 20));

        deconnect.setText("Se D√©connecter");
        deconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnectActionPerformed(evt);
            }
        });
        jPanel2.add(deconnect, new org.netbeans.lib.awtextra.AbsoluteConstraints(863, 0, 140, -1));

        addHeureGolfText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHeureGolfTextActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Ajouter Heure de Communication");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Ajouter Heure de Golfe");

        ajouteHeureCom.setText("Ajouter");
        ajouteHeureCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouteHeureComActionPerformed(evt);
            }
        });

        btnajouterHeureGolfe.setText("Ajouter");
        btnajouterHeureGolfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnajouterHeureGolfeActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(51, 153, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel17.setText("Gestion Ing√©nieur");

        jLabel18.setBackground(new java.awt.Color(51, 153, 255));
        jLabel18.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel18.setText("Gestion Manager");

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 1));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setPreferredSize(new java.awt.Dimension(100, 1));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 151, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setPreferredSize(new java.awt.Dimension(4, 110));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(389, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(105, Short.MAX_VALUE)))
        );

        jPanel9.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel14))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addheureComText, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(ajouteHeureCom)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(jLabel16))
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(addHeureGolfText, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(btnajouterHeureGolfe)
                                .addGap(92, 92, 92))))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addHeureGolfText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addheureComText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnajouterHeureGolfe)
                            .addComponent(ajouteHeureCom, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, 570, 170));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 10, 80));

        htText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                htTextKeyPressed(evt);
            }
        });
        jPanel2.add(htText, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 244, 153, 34));
        jPanel2.add(htText2, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 244, 153, 34));

        jMenu1.setText("File");

        menuAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        menuAdd.setText("Ajouter");
        menuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddActionPerformed(evt);
            }
        });
        jMenu1.add(menuAdd);

        menuEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_CONTROL, java.awt.event.InputEvent.SHIFT_MASK));
        menuEdit.setText("Modifier");
        menuEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditActionPerformed(evt);
            }
        });
        jMenu1.add(menuEdit);

        menuDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        menuDelete.setText("Supprimer");
        menuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(menuDelete);

        menuUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuUpdate.setText("Actualiser");
        menuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(menuUpdate);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        menuSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        menuSearch.setText("recherche");
        menuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSearchActionPerformed(evt);
            }
        });
        jMenu2.add(menuSearch);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // le bouton modifier
        try {
            //confirmation avant de modifier
            if(JOptionPane.showConfirmDialog(null, "confirmez la modification","modification", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION){
            String salaireMin = sText.getText();
            String heurTravailMax = htText.getText();
            Float salMinimal = Float.valueOf(salaireMin);
            Integer HeureTMaximal = Integer.valueOf(heurTravailMax);
            
            if(salMinimal < 8){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre salaire est inferieur a 8$");
            }
            else if(HeureTMaximal > 60){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre nombre d'heures de travail depasse les 60 heures");
            } 

            else{                 
            //preparation du requete sql avec executeUpdate pour la modification d'un employe
                stm.executeUpdate("UPDATE employe SET id='"+idText.getText()+"',prenom='"+pText.getText()+"',nom='"+nText.getText()+"',salaire='"+sText.getText()
                        +"',taux_horaire='"+thText.getText()+"',nbr_heures_travail='"+htText.getText()+"',type='"+tText.getSelectedItem().toString()+
                        "' WHERE ID= "+idText.getText());
                //apres modification return les champs vides
                idText.setText("");
                pText.setText("");
                nText.setText("");
                sText.setText("");
                thText.setText("");
                htText.setText("");
            }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de modidfier !!!!!!!"+e.getMessage());
            
            System.err.println(e);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // bouton ajouter
        try{
            //connection a la base de donnees
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection ("jdbc:mysql://localhost/gestion_paiement?characterEncoding=utf8&useSSL=false&useUnicode=true","root","");
            //recuperer des variables saisi dans les champs du formulaire avec la fonction getText()
            String prenom = pText.getText();
            String nom = nText.getText();
            String salaire = sText.getText();
            String taux_horaire = thText.getText();
            String nbr_heures_travail = htText.getText();
            String type = tText.getSelectedItem().toString();
            
            Statement stm = con.createStatement();

            //insertion des donnees avec la methode preparedStatement
            
            String insert = "INSERT INTO employe(prenom , nom ,salaire, taux_horaire ,nbr_heures_travail  ,type) VALUES(?,?,?,?,?,?)";
                
            String salaireMin = sText.getText();
            String heurTravailMax = htText.getText();
            Float salMinimal = Float.valueOf(salaireMin);
            Integer HeureTMaximal = Integer.valueOf(heurTravailMax);
            
            if(salMinimal < 8){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre salaire est inferieur a 8$");
            }
            else if(HeureTMaximal > 60){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre nombre d'heures de travail depasse les 60 heures");
            } 

            else{  
                pst = con.prepareStatement(insert);
                pst.setString(1,pText.getText());
                pst.setString(2,nText.getText());
                pst.setString(3,sText.getText());
                pst.setString(4,thText.getText());
                pst.setString(5,htText.getText());
                pst.setString(6,tText.getSelectedItem().toString());

                pst.execute();
                con.close(); //fermer la connexion
                JOptionPane.showMessageDialog(null,"Enregistrement reussi");
            }

            
            
            //retourne les champs vides apres insertion
            idText.setText("");
            pText.setText("");
            nText.setText("");
            sText.setText("");
            thText.setText("");
            htText.setText("");
//            }
            
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // bouton suppression
        try {
            //message de confirmation
            if(JOptionPane.showConfirmDialog(null, "voulez vous supprimer un employe,est ce que tu es sure ??"," supprimer un employe", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION)
                if(idText.getText().length() != 0)
                {
                    stm.executeUpdate("DELETE FROM employe WHERE ID= "+idText.getText());
                    //retourne les champs vides apres suppression
                    idText.setText("");
                    pText.setText("");
                    nText.setText("");
                    sText.setText("");
                    thText.setText("");
                    htText.setText("");
                }else{
                    JOptionPane.showMessageDialog(null, "Veuillez svp remplir le champ id !!!!!!!");          
                }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de supprimer \n"+e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // bouton actualiser
        model.setRowCount(0);
        try{
            stm = con.laconnexion().createStatement();
            ResultSet rs = stm.executeQuery("Select * from employe");
            while(rs.next()){
                double paiementNormal = rs.getFloat("salaire")*rs.getInt("nbr_heures_travail");
                double prime= rs.getFloat("salaire")*((1.5));
                double paiements = paiementNormal + prime;
                model.addRow(new Object[]{rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),rs.getString("salaire"),rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements});
            }
            
        }catch(Exception e){
            System.err.println(e);
        }
        montab.setModel(model);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // bouton recherche
        model.setRowCount(0); //pour vider la liste
        try{
            stm = con.laconnexion().createStatement();
            ResultSet rs = stm.executeQuery("Select * from employe WHERE type = '"+searchText.getText()+"'");
            while(rs.next()){
               
                double paiementNormal = rs.getFloat("salaire")*rs.getInt("nbr_heures_travail");
                double prime= rs.getFloat("salaire")*((1.5));
                double paiements = paiementNormal + prime;
                Object [] employe = {rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),rs.getString("salaire"),rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements};
                model.addRow(employe);
            }
            if(model.getRowCount() == 0)
            {
                JOptionPane.showMessageDialog(null, " IL  y a aucun employe");
                int i = 0;
                deplace(i);
            }
            
        }catch(Exception e){
            System.err.println(e);
        }
        montab.setModel(model);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tTextActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    /***********************Tous les actions declares dans differents boutons sont respectivement redeclares dans les menu**********************/
    
    
    
    private void menuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddActionPerformed
        // TODO add your handling code here:
        // bouton ajouter
        try{
            //connection a la base de donnees
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection ("jdbc:mysql://localhost/gestion_paiement?characterEncoding=utf8&useSSL=false&useUnicode=true","root","");
            //recuperer des variables saisi dans les champs du formulaire avec la fonction getText()
            String prenom = pText.getText();
            String nom = nText.getText();
            String salaire = sText.getText();
            String taux_horaire = thText.getText();
            String nbr_heures_travail = htText.getText();
            String type = tText.getSelectedItem().toString();
            
            Statement stm = con.createStatement();

            //insertion des donnees avec la methode preparedStatement
            
            String insert = "INSERT INTO employe(prenom , nom ,salaire, taux_horaire ,nbr_heures_travail  ,type) VALUES(?,?,?,?,?,?)";
                
            String salaireMin = sText.getText();
            String heurTravailMax = htText.getText();
            Float salMinimal = Float.valueOf(salaireMin);
            Integer HeureTMaximal = Integer.valueOf(heurTravailMax);
            
            if(salMinimal < 8){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre salaire est inferieur a 8$");
            }
            else if(HeureTMaximal > 60){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre nombre d'heures de travail depasse les 60 heures");
            } 

            else{  
                pst = con.prepareStatement(insert);
                pst.setString(1,pText.getText());
                pst.setString(2,nText.getText());
                pst.setString(3,sText.getText());
                pst.setString(4,thText.getText());
                pst.setString(5,htText.getText());
                pst.setString(6,tText.getSelectedItem().toString());

                pst.execute();
                con.close(); //fermer la connexion
                JOptionPane.showMessageDialog(null,"Enregistrement reussi");
            }

            
            
            //retourne les champs vides apres insertion
            idText.setText("");
            pText.setText("");
            nText.setText("");
            sText.setText("");
            thText.setText("");
            htText.setText("");
//            }
            
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_menuAddActionPerformed

    private void menuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditActionPerformed
        // le bouton modifier
        try {
            //confirmation avant de modifier
            if(JOptionPane.showConfirmDialog(null, "confirmez la modification","modification", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION){
            String salaireMin = sText.getText();
            String heurTravailMax = htText.getText();
            Float salMinimal = Float.valueOf(salaireMin);
            Integer HeureTMaximal = Integer.valueOf(heurTravailMax);
            
            if(salMinimal < 8){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre salaire est inferieur a 8$");
            }
            else if(HeureTMaximal > 60){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre nombre d'heures de travail depasse les 60 heures");
            } 

            else{                 
            //preparation du requete sql avec executeUpdate pour la modification d'un employe
                stm.executeUpdate("UPDATE employe SET id='"+idText.getText()+"',prenom='"+pText.getText()+"',nom='"+nText.getText()+"',salaire='"+sText.getText()
                        +"',taux_horaire='"+thText.getText()+"',nbr_heures_travail='"+htText.getText()+"',type='"+tText.getSelectedItem().toString()+
                        "' WHERE ID= "+idText.getText());
                //apres modification return les champs vides
                idText.setText("");
                pText.setText("");
                nText.setText("");
                sText.setText("");
                thText.setText("");
                htText.setText("");
                }
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de modidfier !!!!!!!"+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_menuEditActionPerformed

    private void menuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteActionPerformed
        // TODO add your handling code here:
               try {
            if(JOptionPane.showConfirmDialog(null, "voulez vous supprimer un employe,est ce que tu es sure ??"," supprimer un employe", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION)
                if(idText.getText().length() != 0)
                {
                    stm.executeUpdate("DELETE FROM employe WHERE ID= "+idText.getText());
                    idText.setText("");
                    pText.setText("");
                    nText.setText("");
                    sText.setText("");
                    thText.setText("");
                    htText.setText("");
                }else{
                    JOptionPane.showMessageDialog(null, "Veuillez svp remplir le champ id !!!!!!!");
                    idText.setText("");
                    pText.setText("");
                    nText.setText("");
                    sText.setText("");
                    thText.setText("");
                    htText.setText("");
                    
                }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de supprimer \n"+e.getMessage());
        }
    }//GEN-LAST:event_menuDeleteActionPerformed

    private void menuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUpdateActionPerformed
        // TODO add your handling code here:
        model.setRowCount(0);
        try{
            stm = con.laconnexion().createStatement();
            ResultSet rs = stm.executeQuery("Select * from employe");
            while(rs.next()){
                 double paiementNormal = rs.getFloat("salaire")*rs.getInt("nbr_heures_travail");
                double prime= rs.getFloat("salaire")*((1.5));
                double paiements = paiementNormal + prime;
                model.addRow(new Object[]{rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),rs.getString("salaire"),rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements});
            }
            
        }catch(Exception e){
            System.err.println(e);
        }
        montab.setModel(model);
    }//GEN-LAST:event_menuUpdateActionPerformed

    private void searchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyPressed
        // la condition permet de verifier si une valeur existe dans le tableau
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            model.setRowCount(0); //pour vider la liste
            try{
                stm = con.laconnexion().createStatement();
                ResultSet rs = stm.executeQuery("Select * from employe WHERE type = '"+searchText.getText()+"'");
                while(rs.next()){
                     double paiementNormal = rs.getFloat("salaire")*rs.getInt("nbr_heures_travail");
                    double prime= rs.getFloat("salaire")*((1.5));
                    double paiements = paiementNormal + prime;
                    Object [] employe = {rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),rs.getString("salaire"),rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements};
                    model.addRow(employe);
                }
                if(model.getRowCount() == 0)
                {
                    JOptionPane.showMessageDialog(null, " IL  y a aucun employe");
                    int i = 0;
                    deplace(i);
                }

            }catch(Exception e){
                System.err.println(e);
            }
            montab.setModel(model);
            }
        
    }//GEN-LAST:event_searchTextKeyPressed

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextKeyReleased

    private void montabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_montabMouseClicked
        // lorsqu on click sur la ligne d'un tableau , il nous recupere les infos dans le formulaire
        try {
            int i = montab.getSelectedRow();
            deplace(i);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " erreur de deplacement "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_montabMouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void menuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSearchActionPerformed
        // TODO add your handling code here:
       model.setRowCount(0); //pour vider la liste
        try{
            stm = con.laconnexion().createStatement();
            ResultSet rs = stm.executeQuery("Select * from employe WHERE type = '"+searchText.getText()+"'");
            while(rs.next()){
                 double paiementNormal = rs.getFloat("salaire")*rs.getInt("nbr_heures_travail");
                double prime= rs.getFloat("salaire")*((1.5));
                double paiements = paiementNormal + prime;
                Object [] employe = {rs.getString("ID"),rs.getString("prenom"),rs.getString("nom"),rs.getString("salaire"),rs.getString("taux_horaire"),rs.getString("nbr_heures_travail"),rs.getString("type"),paiements};
                model.addRow(employe);
            }
            if(model.getRowCount() == 0)
            {
                JOptionPane.showMessageDialog(null, " IL  y a aucun employe");
                int i = 0;
                deplace(i);
            }
            
        }catch(Exception e){
            System.err.println(e);
        }
        montab.setModel(model);
    }//GEN-LAST:event_menuSearchActionPerformed

    private void deconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnectActionPerformed
        
        if(JOptionPane.showConfirmDialog(null, "Etes vous sure de vous deconnecter", "D√©connecter" ,JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION){
        dispose();
        Login log = new Login();//ma page d'accueil
        log.show();}
    }//GEN-LAST:event_deconnectActionPerformed

    private void addHeureGolfTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHeureGolfTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addHeureGolfTextActionPerformed
    private void ajouteHeureCom(int nbr_heure_communication) {
        nbr_heure_communication =0;
        String httt = htText.getText();
        Integer hh = Integer.valueOf(httt);
        httt = httt + nbr_heure_communication;
    }

    private void ajouteHeureComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouteHeureComActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            if(JOptionPane.showConfirmDialog(null, "Ajouter une heure de communication","Gestion Ingenieur", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION){
            String getHeureCom = addheureComText.getText();
            String getHeureTravail = htText.getText();
            //convertir en entier
            Integer getHeureComToInt = Integer.valueOf(getHeureCom);
            Integer getHeureTravailToInt = Integer.valueOf(getHeureTravail);
            Integer sum = getHeureTravailToInt + getHeureComToInt;
            
//            Integer hhcom = Integer.valueOf(heureCo);
//            Integer hh = Integer.valueOf(heureCom);
            stm.executeUpdate("UPDATE employe SET id='"+idText.getText()+"',prenom='"+pText.getText()+"',nom='"+nText.getText()+"',salaire='"+sText.getText()+"',taux_horaire='"+thText.getText()+"',nbr_heures_travail='"+sum+"',type='"+tText.getSelectedItem().toString()
                    +"' WHERE ID= "+idText.getText());
            
//            "' and + mpd='"+mpd+"'"
//+"' and + type='"+tText.getSelectedItem().toString()+"'"
            
            idText.setText("");
            pText.setText("");
            nText.setText("");
            sText.setText("");
            thText.setText("");
            htText.setText("");
            addheureComText.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de modifier !!!!!!! "+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_ajouteHeureComActionPerformed

    private void sTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           String salaireMin = sText.getText();
           Float salMinimal = Float.valueOf(salaireMin);
            if(salMinimal < 8){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre salaire est inferieur a 8$");
            }
        }
    }//GEN-LAST:event_sTextKeyPressed

    private void htTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_htTextKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String heurTravailMax = htText.getText();
            Integer HeureTMaximal = Integer.valueOf(heurTravailMax);
            if(HeureTMaximal > 60){
                JOptionPane.showMessageDialog(null, "IMPOSSIBLE : Votre nombre d'heures de travail depasse les 60 heures");
            } 
        }
    }//GEN-LAST:event_htTextKeyPressed

    private void btnajouterHeureGolfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnajouterHeureGolfeActionPerformed
        // TODO add your handling code here:
        try {
            if(JOptionPane.showConfirmDialog(null, "Ajouter une heure de golf","Gestion Manager", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION){
            String getHeureGolf = addHeureGolfText.getText();
            String getHeureTravail = htText.getText();
            //convertir en entier
            Integer getHeureGolfToInt = Integer.valueOf(getHeureGolf);
            Integer getHeureTravailToInt = Integer.valueOf(getHeureTravail);
            Integer summe = getHeureTravailToInt + getHeureGolfToInt;
            
//            Integer hhcom = Integer.valueOf(heureCo);
//            Integer hh = Integer.valueOf(heureCom);
            stm.executeUpdate("UPDATE employe SET id='"+idText.getText()+"',prenom='"+pText.getText()+"',nom='"+nText.getText()+"',salaire='"+sText.getText()+"',taux_horaire='"+thText.getText()+"',nbr_heures_travail='"+summe+"',type='"+tText.getSelectedItem().toString()
                    +"' WHERE ID= "+idText.getText());
            
//            "' and + mpd='"+mpd+"'"
//+"' and + type='"+tText.getSelectedItem().toString()+"'"
            
            idText.setText("");
            pText.setText("");
            nText.setText("");
            sText.setText("");
            thText.setText("");
            htText.setText("");
            addHeureGolfText.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de modifier !!!!!!! "+e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_btnajouterHeureGolfeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TEST.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TEST().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TEST.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addHeureGolfText;
    private javax.swing.JTextField addheureComText;
    private javax.swing.JButton ajouteHeureCom;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnajouterHeureGolfe;
    private javax.swing.JButton deconnect;
    private javax.swing.JTextField htText;
    private javax.swing.JTextField htText2;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem menuAdd;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JMenuItem menuEdit;
    private javax.swing.JMenuItem menuSearch;
    private javax.swing.JMenuItem menuUpdate;
    private javax.swing.JTable montab;
    private javax.swing.JTextField nText;
    private javax.swing.JTextField pText;
    private javax.swing.JTextField sText;
    private javax.swing.JTextField searchText;
    private javax.swing.JComboBox<String> tText;
    private javax.swing.JTextField thText;
    // End of variables declaration//GEN-END:variables

    //la fonction nous permet de  se deplacer lors de l'actualisation ou d'un recherche
    private void deplace(int i) {
        try {
            idText.setText(model.getValueAt(i,0).toString());
            pText.setText(model.getValueAt(i,1).toString());
            nText.setText(model.getValueAt(i,2).toString());
            sText.setText(model.getValueAt(i,3).toString());
            thText.setText(model.getValueAt(i,4).toString());
            htText.setText(model.getValueAt(i,5).toString());
            tText.setSelectedItem(model.getValueAt(i, 6));
//            paymentTotal.setText(model.getValueAt(i,5).toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, " erreur de deplacement "+e.getLocalizedMessage());
        }
    }

   
}
